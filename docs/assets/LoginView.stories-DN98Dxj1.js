import{r as y,R as e}from"./index-SSXOyoI7.js";/* empty css              */import{M as w}from"./MockHttpClient-CrRj0xgx.js";const m=({notuClient:u,onLogin:d})=>{const[a,r]=y.useState(null);async function p(n){n.preventDefault(),r(null);const E=n.target.elements.username.value,f=n.target.elements.password.value;try{console.log("Attempting to login"),await u.login(E,f),console.log("Login succeeded"),await d()}catch(s){console.log({err:s}),r(s.message)}}function g(){if(a)return e.createElement("div",{className:"notification is-danger"},e.createElement("label",null,"Error: ",a))}return e.createElement("form",{onSubmit:p},e.createElement("fieldset",null,g(),e.createElement("div",{className:"field"},e.createElement("label",{className:"label"},"Username"),e.createElement("div",{className:"control"},e.createElement("input",{type:"text",className:"input",name:"username"}))),e.createElement("div",{className:"field"},e.createElement("label",{className:"label"},"Password"),e.createElement("div",{className:"control"},e.createElement("input",{type:"password",className:"input",name:"password"}))),e.createElement("div",{className:"field"},e.createElement("button",{type:"submit",className:"button is-link"},"Login"))))};m.__docgenInfo={description:"",methods:[],displayName:"LoginView",props:{notuClient:{required:!0,tsType:{name:"NotuClient"},description:"Used for saving the space once changes have been confirmed"},onLogin:{required:!0,tsType:{name:"signature",type:"function",raw:"() => Promise<void>",signature:{arguments:[],return:{name:"Promise",elements:[{name:"void"}],raw:"Promise<void>"}}},description:""}}};const L={title:"LoginView",component:m,parameters:{layout:"padded"},tags:["autodocs"]},o=new w,t={args:{notuClient:o,onLogin:async()=>{console.log("Logged in",o)}}};var i,l,c;t.parameters={...t.parameters,docs:{...(i=t.parameters)==null?void 0:i.docs,source:{originalSource:`{
  args: {
    notuClient: (notuClient as any),
    onLogin: async () => {
      console.log('Logged in', notuClient);
    }
  }
}`,...(c=(l=t.parameters)==null?void 0:l.docs)==null?void 0:c.source}}};const C=["Primary"];export{t as Primary,C as __namedExportsOrder,L as default};
