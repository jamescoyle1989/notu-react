import{j as jsxRuntimeExports}from"./jsx-runtime-wvP3fMU7.js";import{r as reactExports}from"./index-ZzCYUyIO.js";import{S as Space,N as Note}from"./notu-m_CwcKhx.js";import"./_commonjsHelpers-uMlHD7dG.js";const notesearch_base="_notesearch_base_9i0a9_1",notesearch_text="_notesearch_text_9i0a9_9",style={notesearch_base,notesearch_text},NoteSearch=({notuClient,space,availableSpaces,onFetch})=>{const[searchText,setSearchText]=reactExports.useState(""),[activeSpace,setActiveSpace]=reactExports.useState(space);function onSearchTextChange(event){setSearchText(event.target.value)}function onSpaceChange(event){setActiveSpace(availableSpaces.find(x=>x.id==event.target.value))}async function onSearchSubmit(){const searchResults=await notuClient.getNotes(searchText,activeSpace.id);onFetch(searchResults)}function renderSpaceDropdown(){return availableSpaces?jsxRuntimeExports.jsx("select",{value:activeSpace.id,onChange:onSpaceChange,children:availableSpaces.map(x=>jsxRuntimeExports.jsx("option",{value:x.id,children:x.name},x.id))}):jsxRuntimeExports.jsx("select",{value:activeSpace.id,onChange:onSpaceChange,disabled:!0,children:jsxRuntimeExports.jsx("option",{value:activeSpace.id,children:activeSpace.name})})}return jsxRuntimeExports.jsxs("div",{className:style.notesearch_base,children:[renderSpaceDropdown(),jsxRuntimeExports.jsx("input",{type:"text",className:style.notesearch_text,value:searchText,onChange:onSearchTextChange}),jsxRuntimeExports.jsx("button",{onClick:onSearchSubmit,children:"Search"})]})};try{NoteSearch.displayName="NoteSearch",NoteSearch.__docgenInfo={description:"",displayName:"NoteSearch",props:{notuClient:{defaultValue:null,description:"",name:"notuClient",required:!0,type:{name:"HttpClient"}},space:{defaultValue:null,description:"",name:"space",required:!0,type:{name:"Space"}},availableSpaces:{defaultValue:null,description:"",name:"availableSpaces",required:!0,type:{name:"Space[]"}},onFetch:{defaultValue:null,description:"",name:"onFetch",required:!0,type:{name:"(notes: Note[]) => void"}}}}}catch{}const meta={title:"NoteSearch",component:NoteSearch,parameters:{layout:"padded"},tags:["autodocs"]};class FakeHttpClient{async getNotes(query,spaceId){return console.log({query,spaceId}),Promise.resolve([new Note("Note 1"),new Note("Note 2")])}}const space1=new Space("Test1");space1.id=1;const space2=new Space("Test2");space2.id=2;const Primary={args:{space:space1,availableSpaces:[space1,space2],notuClient:new FakeHttpClient,onFetch:notes=>console.log(notes)}},NoAvailableSpaces={args:{space:space1,availableSpaces:null,notuClient:new FakeHttpClient,onFetch:notes=>console.log(notes)}};var _a,_b,_c;Primary.parameters={...Primary.parameters,docs:{...(_a=Primary.parameters)==null?void 0:_a.docs,source:{originalSource:`{
  args: {
    space: space1,
    availableSpaces: [space1, space2],
    notuClient: (new FakeHttpClient() as any),
    onFetch: notes => console.log(notes)
  }
}`,...(_c=(_b=Primary.parameters)==null?void 0:_b.docs)==null?void 0:_c.source}}};var _a2,_b2,_c2;NoAvailableSpaces.parameters={...NoAvailableSpaces.parameters,docs:{...(_a2=NoAvailableSpaces.parameters)==null?void 0:_a2.docs,source:{originalSource:`{
  args: {
    space: space1,
    availableSpaces: null,
    notuClient: (new FakeHttpClient() as any),
    onFetch: notes => console.log(notes)
  }
}`,...(_c2=(_b2=NoAvailableSpaces.parameters)==null?void 0:_b2.docs)==null?void 0:_c2.source}}};const __namedExportsOrder=["Primary","NoAvailableSpaces"];export{NoAvailableSpaces,Primary,__namedExportsOrder,meta as default};
//# sourceMappingURL=NoteSearch.stories-suH7rZ_q.js.map
