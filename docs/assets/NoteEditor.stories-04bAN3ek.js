import{j as jsxRuntimeExports}from"./jsx-runtime-wvP3fMU7.js";import{r as reactExports}from"./index-ZzCYUyIO.js";import{N as NoteTagBadge}from"./NoteTagBadge-YuDQMR-7.js";import{S as Space,N as Note,T as Tag,A as Attr}from"./notu-m_CwcKhx.js";import{N as NoteAttrEditor}from"./NoteAttrEditor-FJ4r0ycL.js";import"./_commonjsHelpers-uMlHD7dG.js";const textfield="_textfield_1f24q_1",attrFieldsContainer="_attrFieldsContainer_1f24q_13",style={textfield,attrFieldsContainer},NoteEditor=({note,spaces,tags,attrs,onConfirm})=>{var _a2;const[date,setDate]=reactExports.useState(note.date.toISOString().split("T")[0]),[spaceId,setSpaceId]=reactExports.useState(note.spaceId),[time,setTime]=reactExports.useState(note.date.toTimeString().split(" ")[0].substring(0,5)),[ownTagName,setOwnTagName]=reactExports.useState(((_a2=note.ownTag)==null?void 0:_a2.name)??""),[text,setText]=reactExports.useState(note.text),[archived,setArchived]=reactExports.useState(note.archived),[tagIds,setTagIds]=reactExports.useState(note.tags.map(x=>x.tagId)),[attrIds,setAttrIds]=reactExports.useState(note.attrs.filter(x=>x.tagId==null).map(x=>x.attrId)),textAreaRef=reactExports.useRef(null);function onDateChange(event){setDate(event.target.value),note.date=new Date(`${event.target.value} ${time}`)}function onTimeChange(event){setTime(event.target.value),note.date=new Date(`${date} ${event.target.value}`)}function onSpaceIdChange(event){setSpaceId(event.target.value),note.space=spaces.find(x=>x.id==event.target.value)}function onOwnTagNameChange(event){setOwnTagName(event.target.value),event.target.value.length==0?note.removeOwnTag():note.setOwnTag(event.target.value)}function onTextChange(event){if(setText(event.target.value),note.text=event.target.value,textAreaRef.current){const textArea=textAreaRef.current;textArea.style.height="",textArea.style.height=textArea.scrollHeight+"px"}}function onArchivedChange(event){setArchived(event.target.checked),note.archived=event.target.checked}function onTagSelected(event){const tagId=event.target.value,tag=tagsThatCanBeAdded().find(x=>x.id==tagId);if(!tag)return;const newTagIds=tagIds.slice();newTagIds.push(tag.id),setTagIds(newTagIds),note.addTag(tag)}function tagsThatCanBeAdded(){return tags.filter(x=>!note.tags.find(y=>x.id==y.tagId))}function getTagName(tag){return tag.spaceId==note.spaceId?tag.name:`${spaces.find(x=>x.id==tag.spaceId).name}.${tag.name}`}function removeTag(tag){setTagIds(tagIds.filter(x=>x!=tag.id)),note.removeTag(tag)}function attrsThatCanBeAdded(){return attrs.filter(x=>!attrIds.find(y=>y==x.id))}function getAttrName(attr){return attr.spaceId==note.spaceId?attr.name:`${spaces.find(x=>x.id==attr.spaceId).name}.${attr.name}`}function renderAttrFields(){if(note.attrs.length!=0)return jsxRuntimeExports.jsx("div",{className:style.attrFieldsContainer,children:note.attrs.map(noteAttr=>jsxRuntimeExports.jsx(NoteAttrEditor,{noteAttr,contextSpaceId:note.spaceId,onRemove:()=>removeAttr(noteAttr.attr)},noteAttr.attrId))})}function removeAttr(attr){setAttrIds(attrIds.filter(x=>x!=attr.id)),note.removeAttr(attr)}function onAttrSelected(event){const attrId=event.target.value,attr=attrsThatCanBeAdded().find(x=>x.id==attrId);if(!attr)return;const newAttrIds=attrIds.slice();newAttrIds.push(attr.id),setAttrIds(newAttrIds),note.addAttr(attr)}return jsxRuntimeExports.jsx("form",{className:"pure-form pure-form-aligned",children:jsxRuntimeExports.jsxs("fieldset",{children:[jsxRuntimeExports.jsxs("div",{className:"pure-control-group",children:[jsxRuntimeExports.jsx("label",{children:"Space"}),jsxRuntimeExports.jsxs("select",{value:spaceId,onChange:onSpaceIdChange,children:[jsxRuntimeExports.jsx("option",{value:null},"0"),spaces.map(x=>jsxRuntimeExports.jsx("option",{value:x.id,children:x.name},x.id))]})]}),jsxRuntimeExports.jsxs("div",{className:"pure-control-group",children:[jsxRuntimeExports.jsx("label",{children:"Date"}),jsxRuntimeExports.jsx("input",{type:"date",value:date,onChange:onDateChange}),jsxRuntimeExports.jsx("input",{type:"time",value:time,onChange:onTimeChange})]}),jsxRuntimeExports.jsxs("div",{className:"pure-control-group",children:[jsxRuntimeExports.jsx("label",{children:"Own Tag"}),jsxRuntimeExports.jsx("input",{type:"text",value:ownTagName,onChange:onOwnTagNameChange})]}),jsxRuntimeExports.jsxs("div",{className:"pure-control-group",children:[jsxRuntimeExports.jsx("label",{children:"Text"}),jsxRuntimeExports.jsx("textarea",{value:text,onChange:onTextChange,ref:textAreaRef,className:style.textfield})]}),jsxRuntimeExports.jsxs("div",{className:"pure-control-group",children:[jsxRuntimeExports.jsx("label",{children:"Archived"}),jsxRuntimeExports.jsx("input",{type:"checkbox",checked:archived,onChange:onArchivedChange})]}),jsxRuntimeExports.jsxs("div",{className:"pure-control-group",children:[jsxRuntimeExports.jsx("label",{children:"Tags"}),jsxRuntimeExports.jsxs("select",{onChange:onTagSelected,children:[jsxRuntimeExports.jsx("option",{value:null},"0"),tagsThatCanBeAdded().map(x=>jsxRuntimeExports.jsx("option",{value:x.id,children:getTagName(x)},x.id))]})]}),jsxRuntimeExports.jsx("div",{className:"pure-controls",children:note.tags.map(x=>jsxRuntimeExports.jsx(NoteTagBadge,{noteTag:x,contextSpaceId:note.spaceId,onDelete:()=>removeTag(x.tag)},x.tag.id))}),jsxRuntimeExports.jsxs("div",{className:"pure-control-group",children:[jsxRuntimeExports.jsx("label",{children:"Attrs"}),jsxRuntimeExports.jsxs("select",{onChange:onAttrSelected,children:[jsxRuntimeExports.jsx("option",{value:null},"0"),attrsThatCanBeAdded().map(x=>jsxRuntimeExports.jsx("option",{value:x.id,children:getAttrName(x)},x.id))]})]}),renderAttrFields(),jsxRuntimeExports.jsx("div",{className:"pure-controls",children:jsxRuntimeExports.jsx("button",{type:"button",onClick:()=>onConfirm(note),className:"pure-button pure-button-primary",children:"Confirm"})})]})})};try{NoteEditor.displayName="NoteEditor",NoteEditor.__docgenInfo={description:"",displayName:"NoteEditor",props:{note:{defaultValue:null,description:"",name:"note",required:!0,type:{name:"Note"}},spaces:{defaultValue:null,description:"",name:"spaces",required:!0,type:{name:"Space[]"}},tags:{defaultValue:null,description:"",name:"tags",required:!0,type:{name:"Tag[]"}},attrs:{defaultValue:null,description:"",name:"attrs",required:!0,type:{name:"Attr[]"}},onConfirm:{defaultValue:null,description:"",name:"onConfirm",required:!0,type:{name:"(note: Note) => string"}}}}}catch{}const meta={title:"NoteEditor",component:NoteEditor,parameters:{layout:"padded"},tags:["autodocs"]},space1=new Space("Space 1").clean();space1.id=1;const space2=new Space("Space 2").clean();space2.id=2;const Primary={args:{note:new Note("hello").at(new Date(1987,6,5,4,3,2)),spaces:[space1,space2],tags:(()=>{const tag1=new Tag("Test Tag",1).clean();return tag1.id=1,tag1.space=space1,[tag1]})(),attrs:(()=>{const attr1=new Attr("Test Attr").in(space1).clean();return attr1.id=1,[attr1]})(),onConfirm:note=>(console.log("Confirm clicked",note),null)}};var _a,_b,_c;Primary.parameters={...Primary.parameters,docs:{...(_a=Primary.parameters)==null?void 0:_a.docs,source:{originalSource:`{
  args: {
    note: new Note('hello').at(new Date(1987, 6, 5, 4, 3, 2)),
    spaces: [space1, space2],
    tags: (() => {
      const tag1 = new Tag('Test Tag', 1).clean();
      tag1.id = 1;
      tag1.space = space1;
      return [tag1];
    })(),
    attrs: (() => {
      const attr1 = new Attr('Test Attr').in(space1).clean();
      attr1.id = 1;
      return [attr1];
    })(),
    onConfirm: note => {
      console.log('Confirm clicked', note);
      return null;
    }
  }
}`,...(_c=(_b=Primary.parameters)==null?void 0:_b.docs)==null?void 0:_c.source}}};const __namedExportsOrder=["Primary"];export{Primary,__namedExportsOrder,meta as default};
//# sourceMappingURL=NoteEditor.stories-04bAN3ek.js.map
