{"version":3,"file":"NoteEditor.stories-04bAN3ek.js","sources":["../../src/NoteEditor.tsx"],"sourcesContent":["import { Attr, Note, Space, Tag } from 'notu';\r\nimport { useState, useRef } from 'react';\r\nimport { NoteTagBadge } from './NoteTagBadge';\r\nimport 'purecss';\r\nimport style from './NoteEditor.module.css';\r\nimport { NoteAttrEditor } from './NoteAttrEditor';\r\n\r\ninterface NoteEditorProps {\r\n    note: Note,\r\n    spaces: Array<Space>,\r\n    tags: Array<Tag>,\r\n    attrs: Array<Attr>,\r\n    onConfirm: (note: Note) => string\r\n}\r\n\r\n\r\nexport const NoteEditor = ({\r\n    note,\r\n    spaces,\r\n    tags,\r\n    attrs,\r\n    onConfirm\r\n}: NoteEditorProps) => {\r\n    const [date, setDate] = useState(note.date.toISOString().split('T')[0]);\r\n    const [spaceId, setSpaceId] = useState(note.spaceId);\r\n    const [time, setTime] = useState(note.date.toTimeString().split(' ')[0].substring(0, 5));\r\n    const [ownTagName, setOwnTagName] = useState(note.ownTag?.name ?? '');\r\n    const [text, setText] = useState(note.text);\r\n    const [archived, setArchived] = useState(note.archived);\r\n    const [tagIds, setTagIds] = useState(note.tags.map(x => x.tagId));\r\n    const [attrIds, setAttrIds] = useState(note.attrs.filter(x => x.tagId == null).map(x => x.attrId));\r\n    const textAreaRef = useRef(null);\r\n\r\n    function onDateChange(event): void {\r\n        setDate(event.target.value);\r\n        note.date = new Date(`${event.target.value} ${time}`);\r\n    }\r\n\r\n    function onTimeChange(event): void {\r\n        setTime(event.target.value);\r\n        note.date = new Date(`${date} ${event.target.value}`);\r\n    }\r\n\r\n    function onSpaceIdChange(event): void {\r\n        setSpaceId(event.target.value);\r\n        note.space = spaces.find(x => x.id == event.target.value);\r\n    }\r\n\r\n    function onOwnTagNameChange(event): void {\r\n        setOwnTagName(event.target.value);\r\n        if (event.target.value.length == 0)\r\n            note.removeOwnTag();\r\n        else\r\n            note.setOwnTag(event.target.value);\r\n    }\r\n\r\n    function onTextChange(event): void {\r\n        setText(event.target.value);\r\n        note.text = event.target.value;\r\n        if (!!textAreaRef.current) {\r\n            const textArea = textAreaRef.current;\r\n            textArea.style.height = '';\r\n            textArea.style.height = textArea.scrollHeight + 'px';\r\n        }\r\n    }\r\n\r\n    function onArchivedChange(event): void {\r\n        setArchived(event.target.checked);\r\n        note.archived = event.target.checked;\r\n    }\r\n\r\n    function onTagSelected(event): void {\r\n        const tagId = event.target.value;\r\n        const tag = tagsThatCanBeAdded().find(x => x.id == tagId);\r\n        if (!tag)\r\n            return;\r\n        const newTagIds = tagIds.slice();\r\n        newTagIds.push(tag.id);\r\n        setTagIds(newTagIds);\r\n        note.addTag(tag);\r\n    }\r\n\r\n    function tagsThatCanBeAdded(): Array<Tag> {\r\n        return tags.filter(x => !note.tags.find(y => x.id == y.tagId));\r\n    }\r\n\r\n    function getTagName(tag: Tag): string {\r\n        if (tag.spaceId == note.spaceId)\r\n            return tag.name;\r\n        return `${spaces.find(x => x.id == tag.spaceId).name}.${tag.name}`;\r\n    }\r\n\r\n    function removeTag(tag: Tag): void {\r\n        setTagIds(tagIds.filter(x => x != tag.id));\r\n        note.removeTag(tag);\r\n    }\r\n\r\n    function attrsThatCanBeAdded(): Array<Attr> {\r\n        return attrs.filter(x => !attrIds.find(y => y == x.id));\r\n    }\r\n\r\n    function getAttrName(attr: Attr): string {\r\n        if (attr.spaceId == note.spaceId)\r\n            return attr.name;\r\n        return `${spaces.find(x => x.id == attr.spaceId).name}.${attr.name}`;\r\n    }\r\n\r\n    function renderAttrFields() {\r\n        if (note.attrs.length == 0)\r\n            return;\r\n        \r\n        return (\r\n            <div className={style.attrFieldsContainer}>\r\n                {note.attrs.map(noteAttr => (\r\n                    <NoteAttrEditor key={noteAttr.attrId} noteAttr={noteAttr} contextSpaceId={note.spaceId} onRemove={() => removeAttr(noteAttr.attr)}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function removeAttr(attr: Attr): void {\r\n        setAttrIds(attrIds.filter(x => x != attr.id));\r\n        note.removeAttr(attr);\r\n    }\r\n\r\n    function onAttrSelected(event): void {\r\n        const attrId = event.target.value;\r\n        const attr = attrsThatCanBeAdded().find(x => x.id == attrId);\r\n        if (!attr)\r\n            return;\r\n        const newAttrIds = attrIds.slice();\r\n        newAttrIds.push(attr.id);\r\n        setAttrIds(newAttrIds);\r\n        note.addAttr(attr);\r\n    }\r\n\r\n    return (\r\n        <form className=\"pure-form pure-form-aligned\">\r\n            <fieldset>\r\n                <div className=\"pure-control-group\">\r\n                    <label>Space</label>\r\n                    <select value={spaceId} onChange={onSpaceIdChange}>\r\n                        <option key=\"0\" value={null}></option>\r\n                        {spaces.map(x => (<option key={x.id} value={x.id}>{x.name}</option>))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"pure-control-group\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" value={date} onChange={onDateChange}></input>\r\n                    <input type=\"time\" value={time} onChange={onTimeChange}></input>\r\n                </div>\r\n\r\n                <div className=\"pure-control-group\">\r\n                    <label>Own Tag</label>\r\n                    <input type=\"text\" value={ownTagName} onChange={onOwnTagNameChange}></input>\r\n                </div>\r\n\r\n                <div className=\"pure-control-group\">\r\n                    <label>Text</label>\r\n                    <textarea value={text} onChange={onTextChange} ref={textAreaRef} className={style.textfield}/>\r\n                </div>\r\n\r\n                <div className=\"pure-control-group\">\r\n                    <label>Archived</label>\r\n                    <input type=\"checkbox\" checked={archived} onChange={onArchivedChange}></input>\r\n                </div>\r\n\r\n                <div className=\"pure-control-group\">\r\n                    <label>Tags</label>\r\n                    <select onChange={onTagSelected}>\r\n                        <option key=\"0\" value={null}></option>\r\n                        {tagsThatCanBeAdded()\r\n                            .map(x => (<option key={x.id} value={x.id}>{getTagName(x)}</option>))}\r\n                    </select>\r\n                </div>\r\n                \r\n                <div className=\"pure-controls\">\r\n                    {note.tags.map(x => (<NoteTagBadge key={x.tag.id} noteTag={x} contextSpaceId={note.spaceId} onDelete={() => removeTag(x.tag)}/>))}\r\n                </div>\r\n\r\n                <div className=\"pure-control-group\">\r\n                    <label>Attrs</label>\r\n                    <select onChange={onAttrSelected}>\r\n                        <option key=\"0\" value={null}></option>\r\n                        {attrsThatCanBeAdded()\r\n                            .map(x => (<option key={x.id} value={x.id}>{getAttrName(x)}</option>))}\r\n                    </select>\r\n                </div>\r\n\r\n                {renderAttrFields()}\r\n\r\n                <div className=\"pure-controls\">\r\n                    <button type=\"button\" onClick={() => onConfirm(note)}\r\n                            className=\"pure-button pure-button-primary\">Confirm</button>\r\n                </div>\r\n            </fieldset>\r\n        </form>\r\n    );\r\n};"],"names":["useState","_a","useRef","jsx","jsxs"],"mappings":"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"}